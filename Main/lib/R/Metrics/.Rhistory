axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm')) +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by disease type")
studyMetricsByDiseasePlot <- studyMetricsByDiseasePlot + coord_flip()
studyMetricsByDiseasePlot
studySummary_byDisease <- select(studySummary, c('Disease', 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(Disease = recode(Disease,
'Diarrheal disease, Malaria, Respiratory condition' = "Other",
'Diarrheal disease, Respiratory condition' = "Other",
"N/A" = "Other")) %>%  #recode disease so N/A or multiple disease == other
pivot_longer(!Disease, names_to = "typeOfCount", values_to = "count") %>%
mutate(count = recode(count, "N/A" = "")) %>%
mutate(count = str_remove_all(count, ",")) %>%
mutate(count = as.numeric(count)) %>% #convert count to numeric
mutate(typeOfCount = factor(typeOfCount , levels = c("Households", "Participants", "Participant repeated measures", "Samples"))) %>%
mutate(Disease = factor(Disease, levels = c("Diarrheal disease", "Malaria", "Schistosomiasis", "Other","Respiratory condition", "HIV")))
str_wrap_factor <- function(x) {
levels(x) <- str_wrap(levels(x),15)
x
}
studyMetricsByDiseasePlot <- ggplot(studySummary_byDisease, aes(x=str_wrap_factor(typeOfCount), y=count, fill= Disease)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm')) +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by disease type")
studyMetricsByDiseasePlot <- studyMetricsByDiseasePlot + coord_flip()
studyMetricsByDiseasePlot
studySummary_byProject <-select(studySummary, c('Project name', 'Households', 'Participants', "Participant repeated measures", "Samples"))
rm(studySummary_byDiseaseLong, studySummary_byProjectLong, studySummary_byStudyDesignLong)
View(studySummary_byProject)
studySummary_byProject <-select(studySummary, c('Project name', 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
)
studySummary_byProject <-select(studySummary, c('Project name', 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Project name` = if_else(`Project name` == "N/A", "Other",`Project name`))
?recode
studySummary_byProject <-select(studySummary, c('Project name', 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Project name` = recode(`Project name`,"N/A" = "Other"))
studySummary_byProject <-select(studySummary, c('Project name', 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Project name` = recode(`Project name`,"N/A" = "Other")) %>%
pivot_longer(!`Project name`,
names_to = "typeOfCount",
values_to = "count") %>%
mutate(count = recode(count, "N/A" = "")) %>%
mutate(count = str_remove_all(count, ",")) %>%
mutate(count = as.numeric(count)) %>% #convert count to numeric
studySummary_byProjectLong$typeOfCount <- factor(studySummary_byProjectLong$typeOfCount , levels = c("Households", "Participants", "Participant repeated measures", "Samples"))
studySummary_byProject <-select(studySummary, c('Project name', 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Project name` = recode(`Project name`,"N/A" = "Other")) %>%
pivot_longer(!`Project name`,
names_to = "typeOfCount",
values_to = "count") %>%
mutate(count = recode(count, "N/A" = "")) %>%
mutate(count = str_remove_all(count, ",")) %>%
mutate(count = as.numeric(count))  #convert count to numeric
studySummary_byProject <-select(studySummary, c('Project name', 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Project name` = recode(`Project name`,"N/A" = "Other")) %>%
pivot_longer(!`Project name`,
names_to = "typeOfCount",
values_to = "count") %>%
mutate(count = recode(count, "N/A" = "")) %>%
mutate(count = str_remove_all(count, ",")) %>%
mutate(count = as.numeric(count)) %>%  #convert count to numeric
mutate(typeOfCount = factor(typeOfCount, levels = c("Households", "Participants", "Participant repeated measures", "Samples")))
studyMetricsByProjectPlot <- ggplot(studySummary_byProject, aes(x=str_wrap_factor(typeOfCount), y=count, fill=`Project name`)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm'))  +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by projects")
studyMetricsByProjectPlot <- studyMetricsByProjectPlot + coord_flip()
studyMetricsByProjectPlot
studySummary_byStudyDesign <- select(studySummary, c("Study design", 'Households', 'Participants', "Participant repeated measures", "Samples"))
View(studySummary_byStudyDesign)
table(studySummary$`Study design`, useNA = "ifany")
studySummary_byStudyDesign <- select(studySummary, c("Study design", 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Study design` = recode(`Study design`, "N/A" = "Other",
"Non-randomized" ~ "Other"))
studySummary_byStudyDesign <- select(studySummary, c("Study design", 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Study design` = recode(`Study design`, "N/A" = "Other",
"Non-randomized" = "Other"))
table(studySummary$`Study design`, useNA = "ifany")
table(studySummary_byStudyDesign$`Study design`, useNA = "ifany")
studySummary_byStudyDesign <- select(studySummary, c("Study design", 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Study design` = recode(`Study design`, "N/A" = "Other",
"Non-randomized" = "Other")) %>%
pivot_longer(!`Study design`,
names_to = "typeOfCount",
values_to = "count") %>%
mutate(count = recode(count, "N/A" = "")) %>%
mutate(count = str_remove_all(count, ",")) %>%
mutate(count = as.numeric(count)) %>%  #convert count to numeric
mutate(typeOfCount = factor(typeOfCount, levels = c("Households", "Participants", "Participant repeated measures", "Samples")))
studySummary_byStudyDesignPlot <- ggplot(studySummary_byStudyDesign, aes(x=str_wrap_factor(typeOfCount), y=count, fill=`Study design`)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm'))  +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by study design")
studySummary_byStudyDesignPlot <- studySummary_byStudyDesignPlot + coord_flip()
studySummary_byStudyDesignPlot
studySummary_byStudyDesign <- select(studySummary, c("Study design", 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Study design` = recode(`Study design`, "N/A" = "Other",
"Non-randomized" = "Other",
"Randomized controlled/clinical trial" = "Randomized controlled trial")) %>%
pivot_longer(!`Study design`,
names_to = "typeOfCount",
values_to = "count") %>%
mutate(count = recode(count, "N/A" = "")) %>%
mutate(count = str_remove_all(count, ",")) %>%
mutate(count = as.numeric(count)) %>%  #convert count to numeric
mutate(typeOfCount = factor(typeOfCount, levels = c("Households", "Participants", "Participant repeated measures", "Samples"))) %>%
mutate(`Study design` = factor(`Study design`, levels = c("Cross-sectional", "Cohort", "Case-control", "Randomized controlled trial")))
studySummary_byStudyDesignPlot <- ggplot(studySummary_byStudyDesign, aes(x=str_wrap_factor(typeOfCount), y=count, fill=`Study design`)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm'))  +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by study design")
studySummary_byStudyDesignPlot <- studySummary_byStudyDesignPlot + coord_flip()
studySummary_byStudyDesignPlot
studySummary_byStudyDesign <- select(studySummary, c("Study design", 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Study design` = recode(`Study design`, "N/A" = "Other",
"Non-randomized" = "Other",
"Randomized controlled/clinical trial" = "Randomized controlled trial")) %>%
pivot_longer(!`Study design`,
names_to = "typeOfCount",
values_to = "count") %>%
mutate(count = recode(count, "N/A" = "")) %>%
mutate(count = str_remove_all(count, ",")) %>%
mutate(count = as.numeric(count)) %>%  #convert count to numeric
mutate(typeOfCount = factor(typeOfCount, levels = c("Households", "Participants", "Participant repeated measures", "Samples"))) %>%
mutate(`Study design` = factor(`Study design`, levels = c("Cross-sectional", "Cohort", "Case-control", "Randomized controlled trial", "Other")))
studySummary_byStudyDesignPlot <- ggplot(studySummary_byStudyDesign, aes(x=str_wrap_factor(typeOfCount), y=count, fill=`Study design`)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm'))  +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by study design")
studySummary_byStudyDesignPlot <- studySummary_byStudyDesignPlot + coord_flip()
studySummary_byStudyDesignPlot
ggsave(paste0("plots/",todayFormated,"_studyMetricsByStudyDesign",".png", sep = ""), plot = studySummary_byStudyDesignPlot)
ggsave(paste0("plots/",todayFormated,"_studyMetricsByProject",".png", sep = ""), plot = studyMetricsByProjectPlot)
colnames(dataAccess) <- c("Year", 'Total requests', 'Approved requests', 'Denied requests')
#calculate cumulative sum
dataAccess$`Total cumulative requests` <-cumsum(dataAccess[, 'Total requests'])
dataAccess$`Approved cumulative requests` <-cumsum(dataAccess[, 'Approved requests'])
dataAccessForPlot <- select(dataAccess, c(Year, `Total cumulative requests`, `Approved cumulative requests`))
dataAccessForPlot <- tidyr::pivot_longer(dataAccessForPlot,!Year, names_to = "type", values_to = "n")
dataAccessRequests <- ggplot(dataAccess, aes(x=Year, y=`Total requests`))+
geom_point(color = ClinEpiColor1st)+
geom_line(color = ClinEpiColor1st)+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold'))+
xlab("Year") +
ylab("Data Requests")+
ggtitle ("Study data requests per year")
dataAccessRequests
ggsave(paste0("plots/",todayFormated,"_dataAccessRequests",".png", sep = ""), plot = dataAccessRequests)
dataAccessRequests <- ggplot(dataAccess, aes(x=Year, y=`Total requests`))+
geom_point(color = ClinEpiColor1st)+
geom_line(color = ClinEpiColor1st)+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold'))+
xlab("Year") +
ylab("Data Requests")+
ggtitle ("Data requests per year")
dataAccessRequests <- ggplot(dataAccess, aes(x=Year, y=`Total requests`))+
geom_point(color = ClinEpiColor1st)+
geom_line(color = ClinEpiColor1st)+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold'))+
xlab("Year") +
ylab("Data Requests")+
ggtitle ("Data access requests per year")
dataAccessRequests
ggsave(paste0("plots/",todayFormated,"_dataAccessRequests",".png", sep = ""), plot = dataAccessRequests)
cumlativeRequests <- ggplot(dataAccessForPlot, aes(x=Year, y=n, color = type)) +
geom_point(position = position_stack(reverse = TRUE))+
geom_line(position = position_stack(reverse = TRUE))+
scale_colour_clinEpi_d("clinEpiDefault") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title=element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
guides(fill = guide_legend(byrow = TRUE), color = guide_legend(reverse=TRUE))+
xlab("Year") +
ylab("Requests")+
ggtitle ("Cumulative study requests per year")
cumlativeRequests
#ggsave(paste0("plots/",todayFormated,"_cumlativeDataAccessRequests",".png", sep = ""), plot = cumlativeRequests)
cumlativeRequests <- ggplot(dataAccessForPlot, aes(x=Year, y=n, color = type)) +
geom_point(position = position_stack(reverse = TRUE))+
geom_line(position = position_stack(reverse = TRUE))+
scale_colour_clinEpi_d("clinEpiDefault") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title=element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
guides(fill = guide_legend(byrow = TRUE), color = guide_legend(reverse=TRUE))+
xlab("Year") +
ylab("Requests")+
ggtitle ("Cumulative data access requests")
cumlativeRequests
ggsave(paste0("plots/",todayFormated,"_cumlativeDataAccessRequests",".png", sep = ""), plot = cumlativeRequests)
View(dataAccessRequests)
View(dataAccessForPlot)
cumlativeRequests <- ggplot(dataAccessForPlot, aes(x=Year, y=n, color = type)) +
geom_point(position = position_stack(reverse = TRUE))+
geom_line(position = position_stack(reverse = TRUE))+
scale_colour_clinEpi_d("clinEpiDefault") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title=element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
guides(fill = guide_legend(byrow = TRUE), color = guide_legend(reverse=TRUE))+
xlab("Year") +
ylab("Requests")+
ggtitle ("Cumulative data access requests")
cumlativeRequests
ggsave(paste0("plots/",todayFormated,"_cumlativeDataAccessRequests",".png", sep = ""), plot = cumlativeRequests)
View(googleScholarCumulativeForPlot)
View(googleScholarCitationsForPlot)
dataAccessForPlot <- select(dataAccess, c(Year, `Total cumulative requests`, `Approved cumulative requests`))
dataAccessForPlot <- tidyr::pivot_longer(dataAccessForPlot,!Year, names_to = "type", values_to = "n")
cumlativeRequests <- ggplot(dataAccessForPlot, aes(x=Year, y=n, color = type)) +
geom_point(position = position_stack(reverse = TRUE))+
geom_line(position = position_stack(reverse = TRUE))+
scale_colour_clinEpi_d("clinEpiDefault") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title=element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
guides(fill = guide_legend(byrow = TRUE), color = guide_legend(reverse=TRUE))+
xlab("Year") +
ylab("Requests")+
ggtitle ("Cumulative data access requests")
cumlativeRequests
cumlativeRequests <- ggplot(dataAccessForPlot, aes(x=Year, y=n, color = type)) +
geom_point(position = position_stack(reverse = TRUE))+
geom_line(position = position_stack(reverse = TRUE))+
scale_colour_clinEpi_d("clinEpiDefault") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title=element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
guides(fill = guide_legend(byrow = TRUE))+
xlab("Year") +
ylab("Requests")+
ggtitle ("Cumulative data access requests")
cumlativeRequests
cumlativeRequests <- ggplot(dataAccessForPlot, aes(x=Year, y=n, color = type)) +
geom_point(position = position_stack(reverse = TRUE))+
geom_line(position = position_stack(reverse = TRUE))+
scale_colour_clinEpi_d("clinEpiDefault") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title=element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
guides(fill = guide_legend(byrow = TRUE), color = guide_legend(reverse=TRUE))+
xlab("Year") +
ylab("Requests")+
ggtitle ("Cumulative data access requests")
cumlativeRequests
View(dataAccess)
cumlative <- ggplot(googleScholarCitationsForPlot, aes(x=year, y=n, color = type)) +
geom_point()+
geom_line()+
scale_colour_clinEpi_d("clinEpiDefault") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title=element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
guides(fill = guide_legend(byrow = TRUE))+
xlab("Year") +
ylab("Citations")+
ggtitle ("ClinEpiDB cumulative citations (Google Scholar)")
cumlative
ggsave(paste0("plots/",todayFormated,"_cumlativeCitations",".png", sep = ""), plot = cumlative)
cumlativeRequests <- ggplot(dataAccessForPlot, aes(x=Year, y=n, color = type)) +
geom_point()+
geom_line()+
scale_colour_clinEpi_d("clinEpiDefault") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title=element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
guides(fill = guide_legend(byrow = TRUE), color = guide_legend(reverse=TRUE))+
xlab("Year") +
ylab("Requests")+
ggtitle ("Cumulative data access requests")
cumlativeRequests
?select
dataAccessForPlot <- select(dataAccess, c(Year, `Total cumulative requests`, `Approved cumulative requests`)) %>%
rename(`Total cumulative requests` = `Total requests`, `Approved cumulative requests` = `Approved requests`)
dataAccessForPlot <- select(dataAccess, c(Year, `Total cumulative requests`, `Approved cumulative requests`)) %>%
rename(`Total requests` = `Total cumulative requests`, `Approved cumulative requests` = `Approved requests`)
dataAccessForPlot <- select(dataAccess, c(Year, `Total cumulative requests`, `Approved cumulative requests`)) %>%
rename(`Total requests` = `Total cumulative requests`, `Approved requests` = `Approved cumulative requests`)
dataAccessForPlot <- tidyr::pivot_longer(dataAccessForPlot,!Year, names_to = "type", values_to = "n")
dataAccessRequests <- ggplot(dataAccess, aes(x=Year, y=`Total requests`))+
geom_point(color = ClinEpiColor1st)+
geom_line(color = ClinEpiColor1st)+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold'))+
xlab("Year") +
ylab("Data Requests")+
ggtitle ("Data access requests per year")
dataAccessRequests
ggsave(paste0("plots/",todayFormated,"_dataAccessRequests",".png", sep = ""), plot = dataAccessRequests)
cumlativeRequests <- ggplot(dataAccessForPlot, aes(x=Year, y=n, color = type)) +
geom_point()+
geom_line()+
scale_colour_clinEpi_d("clinEpiDefault") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title=element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
guides(fill = guide_legend(byrow = TRUE), color = guide_legend(reverse=TRUE))+
xlab("Year") +
ylab("Requests")+
ggtitle ("Cumulative data access requests")
cumlativeRequests
ggsave(paste0("plots/",todayFormated,"_cumlativeDataAccessRequests",".png", sep = ""), plot = cumlativeRequests)
