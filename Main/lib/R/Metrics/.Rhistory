todayFormated <- format(today, format="%Y%m%d")
clinEpi_colours = list(
clinEpiDefault = c("#882255",
"#88ccee",
"#999933",
"#332288",
"#44aa99",
"#ddcc77",
"#cc6677",
"#117733"),
clinEpiDark = c("#731c48",
"#71c2ea",
"#85852c",
"#2b1c73",
"#3c9788",
"#d7c462",
"#c55266",
"#0d6029"))
clinEpiDefaultLst = c("#882255",
"#88ccee",
"#999933",
"#332288",
"#44aa99",
"#ddcc77",
"#cc6677",
"#117733")
ClinEpiColor1st <- "#882255"
ClinEpiColor2nd <-  "#88ccee"
clinEpi_palettes = function(name, n, all_palettes = clinEpi_colours, type = c("discrete", "continuous")) {
palette = all_palettes[[name]]
if (missing(n)) {
n = length(palette)
}
type = match.arg(type)
out = switch(type,
continuous = grDevices::colorRampPalette(palette)(n),
discrete = palette[1:n]
)
structure(out, name = name, class = "palette")
}
scale_colour_clinEpi_d = function(name) {
ggplot2::scale_colour_manual(values = clinEpi_palettes(name,
type = "discrete"))
}
scale_fill_clinEpi_d = function(name) {
ggplot2::scale_fill_manual(values = clinEpi_palettes(name,
type = "discrete"))
}
#flip data
globalUsageForPlot <- pivot_longer(globalUsage,!Year, names_to = "region", values_to = "n")
globalUsageForPlot$region <- as.factor(globalUsageForPlot$region)
globalUsageForPlot$region <- factor(globalUsageForPlot$region, levels = c("Americas", "Asia", "Europe", "Africa", "Oceania", "Not set"))
globalUsagePlot <- ggplot(globalUsageForPlot, aes(x=Year, y=n, fill=region)) +
geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_y_continuous(expand = c(0,0)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold'))+
ylab("Users")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle ("ClinEpiDB global usage (Google Analytics)")
globalUsagePlot
ggsave(paste0("plots/", todayFormated, "_globalUsagePlot" ,".png", sep = ""), plot = globalUsagePlot)
citations <- ggplot(googleScholarCitations, aes(x=year, y=citations))+
geom_point(color = ClinEpiColor1st)+
geom_line(color = ClinEpiColor1st)+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold'))+
xlab("Year") +
ylab("Citations")+
ggtitle ("ClinEpiDB citations per year (Google Scholar)")
citations
ggsave(paste0("plots/",todayFormated,"_citations",".png", sep = ""), plot = citations)
#calculate cumulative sum
googleScholarCitations$`Total` <-cumsum(googleScholarCitations[, 'citations'])
googleScholarCitations$`Non-study team`  <-cumsum(googleScholarCitations[,'nonStudyTeam'])
googleScholarCumulativeForPlot <- select(googleScholarCitations, c(year, `Total`, `Non-study team`))
googleScholarCitationsForPlot <- pivot_longer(googleScholarCumulativeForPlot,!year, names_to = "type", values_to = "n")
cumlative <- ggplot(googleScholarCitationsForPlot, aes(x=year, y=n, color = type)) +
geom_point(position = position_stack(reverse = TRUE))+
geom_line(position = position_stack(reverse = TRUE))+
scale_colour_clinEpi_d("clinEpiDefault") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title=element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
guides(fill = guide_legend(byrow = TRUE))+
xlab("Year") +
ylab("Citations")+
ggtitle ("ClinEpiDB cumulative citations (Google Scholar)")
cumlative
ggsave(paste0("plots/",todayFormated,"_cumlativeCitations",".png", sep = ""), plot = cumlative)
websiteUsage$UniqueVisitorsPerMonth <- (websiteUsage$UniqueVisitors/websiteUsage$months)
websiteUsage$NumberOfVisitsPerMonth <- (websiteUsage$NumberVisits/websiteUsage$months)
websiteUsage$PagesPerMonth <- (websiteUsage$Pages/websiteUsage$months)
websiteUsage$HitsPerMonth <- (websiteUsage$Hits/websiteUsage$months)
websiteUsage$BandwidthPerMonth <-(websiteUsage$Bandwidth/websiteUsage$months)
maxYear <- max(websiteUsage$Year)
uniqueVisitors <- ggplot(websiteUsage, aes(x=Year, y=UniqueVisitorsPerMonth)) +
geom_line(color = ClinEpiColor1st)+
geom_point(color = ClinEpiColor1st) +
scale_x_continuous(breaks = integer_breaks(), limits = c(NA, NA))+
scale_y_continuous(limits = c(0,NA))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
xlab("Year") +
ylab("Visitors") +
ggtitle ("ClinEpiDB unique visitors per month (AW Stats)")
uniqueVisitors
ggsave(paste0("plots/",todayFormated,"_uniqueVisitorsAWS",".png", sep = ""), plot = uniqueVisitors)
visits <- ggplot(websiteUsage, aes(x=Year, y=NumberOfVisitsPerMonth)) +
geom_line(color = ClinEpiColor1st)+
geom_point(color = ClinEpiColor1st) +
scale_x_continuous(breaks = integer_breaks(), limits = c(NA, NA))+
scale_y_continuous(limits = c(0, NA))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
xlab("Year") +
ylab("Visits") +
ggtitle ("ClinEpiDB visits per month (AW Stats)")
visits
ggsave(paste0("plots/",todayFormated,"_visitsAWS",".png", sep = ""), plot = visits)
websiteStatsGoogle$usersMonth <- (websiteStatsGoogle$users)/(websiteStatsGoogle$months)
websiteStatsGoogle$sessionsMonth <- (websiteStatsGoogle$sessions)/(websiteStatsGoogle$months)
maxYear <- max(websiteStatsGoogle$year)
usersGoogle <- ggplot(websiteStatsGoogle, aes(x=year, y=usersMonth)) +
geom_line(color = ClinEpiColor1st)+
geom_point(color = ClinEpiColor1st) +
scale_x_continuous(breaks = integer_breaks())+
scale_y_continuous(limits = c(0, NA))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
xlab("Year") +
ylab("Users") +
ggtitle ("ClinEpiDB users per month (Google)")
usersGoogle
ggsave(paste0("plots/", todayFormated,"_usersGoogle", ".png", sep = ""), plot = usersGoogle)
sessionsGoogle <- ggplot(websiteStatsGoogle, aes(x=year, y=sessionsMonth)) +
geom_line(color = ClinEpiColor1st)+
geom_point(color = ClinEpiColor1st) +
scale_x_continuous(breaks = integer_breaks())+
scale_y_continuous(limits = c(0, NA))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(color = "black"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
axis.title.x = element_text(size=14),
axis.text.x = element_text(size=14, face = 'bold'),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=14, face = 'bold')) +
xlab("Year") +
ylab("Sessions") +
ggtitle ("ClinEpiDB sessions per month (Google)")
sessionsGoogle
ggsave(paste0("plots/",todayFormated,"_sessionsGoogle",".png", sep = ""), plot = sessionsGoogle)
studySummary_byDisease <- select(studySummary, c('Disease', 'Households', 'Participants', "Participant repeated measures", "Samples"))
#recode disease
# NA or multiple disease == other
studySummary_byDisease$Disease <- recode(studySummary_byDisease$Disease,
'Diarrheal disease, Malaria, Respiratory condition' = "Other",
'Diarrheal disease, Respiratory condition' = "Other")
studySummary_byDisease$Disease <- if_else(studySummary_byDisease$Disease == "", "Other",studySummary_byDisease$Disease)
studySummary_byDiseaseLong <- pivot_longer(studySummary_byDisease, !Disease, names_to = "typeOfCount", values_to = "count")
studySummary_byDiseaseLong$typeOfCount <- factor(studySummary_byDiseaseLong$typeOfCount , levels = c("Households", "Participants", "Participant repeated measures", "Samples"))
studyMetricsByDiseasePlot <- ggplot(studySummary_byDiseaseLong, aes(x=(str_wrap(typeOfCount,15)), y=count, fill= Disease)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm')) +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by disease type")
studyMetricsByDiseasePlot <- studyMetricsByDiseasePlot + coord_flip()
studyMetricsByDiseasePlot
ggsave(paste0("plots/",todayFormated,"_studyMetricsByDisease",".png", sep = ""), plot = studyMetricsByDiseasePlot)
studyMetricsByDiseasePlot <- ggplot(studySummary_byDiseaseLong, aes(x=typeOfCount, y=count, fill= Disease)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm')) +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by disease type")
studyMetricsByDiseasePlot <- studyMetricsByDiseasePlot + coord_flip()
studyMetricsByDiseasePlot
ggsave(paste0("plots/",todayFormated,"_studyMetricsByDisease",".png", sep = ""), plot = studyMetricsByDiseasePlot)
studyMetricsByDiseasePlot <- ggplot(studySummary_byDiseaseLong, aes(x=(str_wrap(typeOfCount,15)), y=count, fill= Disease)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm')) +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by disease type")
studyMetricsByDiseasePlot <- studyMetricsByDiseasePlot + coord_flip()
studyMetricsByDiseasePlot
ggsave(paste0("plots/",todayFormated,"_studyMetricsByDisease",".png", sep = ""), plot = studyMetricsByDiseasePlot)
levels(x) <- str_wrap(levels(x), ...)
?function
function
str_wrap_factor <- function(x) {
levels(x) <- str_wrap(levels(x),15)
x
}
studyMetricsByDiseasePlot <- ggplot(studySummary_byDiseaseLong, aes(x=(str_wrap_factor(typeOfCount,15)), y=count, fill= Disease)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm')) +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by disease type")
studyMetricsByDiseasePlot <- studyMetricsByDiseasePlot + coord_flip()
studyMetricsByDiseasePlot
studyMetricsByDiseasePlot <- ggplot(studySummary_byDiseaseLong, aes(x=(str_wrap_factor(typeOfCount)), y=count, fill= Disease)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm')) +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by disease type")
studyMetricsByDiseasePlot <- studyMetricsByDiseasePlot + coord_flip()
studyMetricsByDiseasePlot
ggsave(paste0("plots/",todayFormated,"_studyMetricsByDisease",".png", sep = ""), plot = studyMetricsByDiseasePlot)
studySummary_byProject <-select(studySummary, c('Project name', 'Households', 'Participants', "Participant repeated measures", "Samples"))
studySummary_byProject$`Project name` <- if_else(studySummary_byProject$`Project name` == "", "Other",studySummary_byProject$`Project name`)
studySummary_byProjectLong <- pivot_longer(studySummary_byProject, !`Project name`, names_to = "typeOfCount", values_to = "count")
studySummary_byProjectLong$typeOfCount <- factor(studySummary_byProjectLong$typeOfCount , levels = c("Households", "Participants", "Participant repeated measures", "Samples"))
studyMetricsByProjectPlot <- ggplot(studySummary_byProjectLong, aes(x=typeOfCount, y=count, fill=`Project name`)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm'))  +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by projects")
studyMetricsByProjectPlot <- studyMetricsByProjectPlot + coord_flip()
studyMetricsByProjectPlot
ggsave(paste0("plots/",todayFormated,"_studyMetricsByProject",".png", sep = ""), plot = studyMetricsByProjectPlot)
studySummary_byStudyDesign <- select(studySummary, c("Study design", 'Households', 'Participants', "Participant repeated measures", "Samples"))
studySummary_byStudyDesign$`Study design` <- if_else(studySummary_byStudyDesign$`Study design` == "", "Other",studySummary_byStudyDesign$`Study design`)
studySummary_byStudyDesignLong <- pivot_longer(studySummary_byStudyDesign, !`Study design`, names_to = "typeOfCount", values_to = "count")
studySummary_byStudyDesignLong$typeOfCount <- factor(studySummary_byStudyDesignLong$typeOfCount , levels = c("Households", "Participants", "Participant repeated measures", "Samples"))
studySummary_byStudyDesignPlot <- ggplot(studySummary_byStudyDesignLong, aes(x=typeOfCount, y=count, fill=`Study design`)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm'))  +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by study design")
studySummary_byStudyDesignPlot <- studySummary_byStudyDesignPlot + coord_flip()
studySummary_byStudyDesignPlot
ggsave(paste0("plots/",todayFormated,"_studyMetricsByStudyDesign",".png", sep = ""), plot = studySummary_byStudyDesignPlot)
studySummary_byStudyDesign <- select(studySummary, c("Study design", 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Study design` = case_when(`Study design` == "" ~ "Other",
`Study design` == "Prospective cohort" ~ "Cohort",
`Study design` == "Non-randomized" ~ "Other", ))
studySummary_byStudyDesignLong <- pivot_longer(studySummary_byStudyDesign, !`Study design`, names_to = "typeOfCount", values_to = "count")
studySummary_byStudyDesignLong$typeOfCount <- factor(studySummary_byStudyDesignLong$typeOfCount , levels = c("Households", "Participants", "Participant repeated measures", "Samples"))
studySummary_byStudyDesignPlot <- ggplot(studySummary_byStudyDesignLong, aes(x=typeOfCount, y=count, fill=`Study design`)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm'))  +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by study design")
studySummary_byStudyDesignPlot <- studySummary_byStudyDesignPlot + coord_flip()
studySummary_byStudyDesignPlot
ggsave(paste0("plots/",todayFormated,"_studyMetricsByStudyDesign",".png", sep = ""), plot = studySummary_byStudyDesignPlot)
studySummary_byStudyDesign <- select(studySummary, c("Study design", 'Households', 'Participants', "Participant repeated measures", "Samples")) %>%
mutate(`Study design` = case_when(`Study design` == "" ~ "Other",
`Study design` == "Prospective cohort" ~ "Cohort",
`Study design` == "Non-randomized" ~ "Other",
T ~ `Study design`))
studySummary_byStudyDesignLong <- pivot_longer(studySummary_byStudyDesign, !`Study design`, names_to = "typeOfCount", values_to = "count")
studySummary_byStudyDesignLong$typeOfCount <- factor(studySummary_byStudyDesignLong$typeOfCount , levels = c("Households", "Participants", "Participant repeated measures", "Samples"))
studySummary_byStudyDesignPlot <- ggplot(studySummary_byStudyDesignLong, aes(x=typeOfCount, y=count, fill=`Study design`)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm'))  +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by study design")
studySummary_byStudyDesignPlot <- studySummary_byStudyDesignPlot + coord_flip()
studySummary_byStudyDesignPlot
studyMetricsByProjectPlot <- ggplot(studySummary_byProjectLong, aes(x=str_wrap_factor(typeOfCount), y=count, fill=`Project name`)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm'))  +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by projects")
studyMetricsByProjectPlot <- studyMetricsByProjectPlot + coord_flip()
studyMetricsByProjectPlot
ggsave(paste0("plots/",todayFormated,"_studyMetricsByProject",".png", sep = ""), plot = studyMetricsByProjectPlot)
studySummary_byStudyDesignPlot <- ggplot(studySummary_byStudyDesignLong, aes(x=str_wrap_factor(typeOfCount), y=count, fill=`Study design`)) +
geom_bar(stat = "identity", position = position_stack(reverse = T)) +
scale_fill_clinEpi_d("clinEpiDefault") +
scale_x_discrete(limits=rev)+
scale_y_continuous(labels = comma, expand = c(0,0))+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text=element_text(family="sans"),
plot.title = element_text(hjust = 0.5, size = 16,face="bold"),
legend.title = element_blank(),
axis.text.x = element_text(face = 'bold'),
legend.text = element_text(size = 5),
axis.text.y = element_text(face = 'bold'),
legend.key.size = unit(5, 'mm'))  +
xlab("") +
ylab("Records")+
guides(fill = guide_legend(reverse=TRUE))+
ggtitle("Record count by study design")
studySummary_byStudyDesignPlot <- studySummary_byStudyDesignPlot + coord_flip()
studySummary_byStudyDesignPlot
ggsave(paste0("plots/",todayFormated,"_studyMetricsByStudyDesign",".png", sep = ""), plot = studySummary_byStudyDesignPlot)
View(studySummary)
View(studySummary_byStudyDesignLong)
